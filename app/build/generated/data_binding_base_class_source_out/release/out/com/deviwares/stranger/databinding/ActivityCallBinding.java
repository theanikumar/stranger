// Generated by data binding compiler. Do not edit!
package com.deviwares.stranger.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Group;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.airbnb.lottie.LottieAnimationView;
import com.deviwares.stranger.R;
import com.mikhaellopez.circularimageview.CircularImageView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityCallBinding extends ViewDataBinding {
  @NonNull
  public final TextView city;

  @NonNull
  public final ImageView connectingImage;

  @NonNull
  public final Group controls;

  @NonNull
  public final ImageView endCall;

  @NonNull
  public final LottieAnimationView loadingAnimation;

  @NonNull
  public final Group loadingGroup;

  @NonNull
  public final ImageView micBtn;

  @NonNull
  public final TextView name;

  @NonNull
  public final CircularImageView profile;

  @NonNull
  public final ImageView videoBtn;

  @NonNull
  public final WebView webView;

  protected ActivityCallBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView city, ImageView connectingImage, Group controls, ImageView endCall,
      LottieAnimationView loadingAnimation, Group loadingGroup, ImageView micBtn, TextView name,
      CircularImageView profile, ImageView videoBtn, WebView webView) {
    super(_bindingComponent, _root, _localFieldCount);
    this.city = city;
    this.connectingImage = connectingImage;
    this.controls = controls;
    this.endCall = endCall;
    this.loadingAnimation = loadingAnimation;
    this.loadingGroup = loadingGroup;
    this.micBtn = micBtn;
    this.name = name;
    this.profile = profile;
    this.videoBtn = videoBtn;
    this.webView = webView;
  }

  @NonNull
  public static ActivityCallBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_call, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityCallBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityCallBinding>inflateInternal(inflater, R.layout.activity_call, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityCallBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_call, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityCallBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityCallBinding>inflateInternal(inflater, R.layout.activity_call, null, false, component);
  }

  public static ActivityCallBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityCallBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityCallBinding)bind(component, view, R.layout.activity_call);
  }
}
